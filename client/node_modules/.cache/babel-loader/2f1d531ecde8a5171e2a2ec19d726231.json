{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fangio\\\\Desktop\\\\WEB\\\\react\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comment,\n    date\n  }\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"post bg-white my-1 p-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  to: `profile/${user}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: avatar,\n  alt: \"\",\n  className: \"round-img\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, name))), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n}, text), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"post-date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n}, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 19\n  }\n}, date)), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => addLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-thumbs-up\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }\n}), ' ', /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }\n}, likes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 36\n  }\n}, likes.length))), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => removeLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-thumbs-down\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(Link, {\n  to: `/post/${_id}`,\n  className: \"btn btn-primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }\n}, \"Discussion\", ' ', comment.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  className: \"comment-count\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }\n}, comment.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => deletePost(_id),\n  type: \"button\",\n  className: \"btn btn-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 11\n  }\n}))));\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["C:/Users/Fangio/Desktop/WEB/react/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comment","date","e","length","loading","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comment, date }\r\n}) => (\r\n  <div className='post bg-white my-1 p-1'>\r\n    <div>\r\n      <Link to={`profile/${user}`}>\r\n        <img src={avatar} alt='' className='round-img' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n\r\n    <div>\r\n      <p className='my-1'>{text}</p>\r\n      <p className='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n      <button\r\n        onClick={(e) => addLike(_id)}\r\n        type='button'\r\n        className='btn btn-light'\r\n      >\r\n        <i className='fas fa-thumbs-up'></i>{' '}\r\n        <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n      </button>\r\n\r\n      <button\r\n        onClick={(e) => removeLike(_id)}\r\n        type='button'\r\n        className='btn btn-light'\r\n      >\r\n        <i className='fas fa-thumbs-down'></i>\r\n      </button>\r\n      <Link to={`/post/${_id}`} className='btn btn-primary'>\r\n        Discussion{' '}\r\n        {comment.length > 0 && (\r\n          <span className='comment-count'>{comment.length}</span>\r\n        )}\r\n      </Link>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={(e) => deletePost(_id)}\r\n          type='button'\r\n          className='btn btn-danger'\r\n        >\r\n          <i className='fas fa-times'></i>\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n"]},"metadata":{},"sourceType":"module"}